package com.example.demo.Models;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import javax.persistence.*;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;

@Entity// we indicate to jpa that this java class maps a table to DB
@Table(name = "Users")
@Data // provides getters and setters
@NoArgsConstructor
@AllArgsConstructor
public class User {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    // with these annotations we indicate to jps that the annotated attribute is a primary key which must be autogenerated
    private Long id;

    @Column
    private String name;

    @Column(unique = true, nullable = false) // we tell jpa that when it generates the tables in DB, it must also create the unique and not null constraints
    // for the annotated field
    private String username;

    @Column(nullable = false)
    private String password;

    @ManyToMany(fetch = FetchType.EAGER)// load all the roles who ever is the user
    // the many-to-many annotation tells JPA that we are in an N:N relationship and the EAGER fetch for example every time we request a user from the users table,
    // we will also fetch all his roles from the ROLES table
    private Collection<Role> roles = new ArrayList<>();



}
